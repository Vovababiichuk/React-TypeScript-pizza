import React, { FC, useState, FormEvent, useEffect } from 'react';
import { Box, FormControl, FormLabel, Input, Select, Stack } from '@chakra-ui/react';
import { Button, Center } from '@chakra-ui/react';
import { AddIcon } from '@chakra-ui/icons';
import Pizza from '../../models/Pizza';
import './styles.css';

interface AddPizzaFormProps {
  addPizza: (newPizza: Pizza) => void;
}

const initState = {
  category: '',
  title: '',
  price: '',
  img: '',
};

export const AddPizzaForm: FC<AddPizzaFormProps> = ({ addPizza }) => {
  const [newPizza, setNewPizza] = useState(initState);
  const [selectedOption, setSelectedOption] = useState('');

  const imageLists: { [key: string]: string[] } = {

    option2: [
      'public/img/hit/1.png',
      'public/img/hit/2.png',
      'public/img/hit/3.png',
      'public/img/hit/4.png',
      'public/img/hit/5.png',
    ],

    option3: [
      'public/img/new/1.png',
      'public/img/new/2.png',
      'public/img/new/3.png',
      'public/img/new/4.png',
      'public/img/new/5.png',
    ],

    option4: [
      'public/img/food/1.png',
      'public/img/food/2.png',
      'public/img/food/3.png',
      'public/img/food/4.png',
      'public/img/food/5.png',
    ],

    option5: [
      'public/img/salad/1.png',
      'public/img/salad/2.png',
      'public/img/salad/3.png',
      'public/img/salad/4.jpeg',
      'public/img/salad/5.jpeg',
    ],
  };

  const [currentImageList, setCurrentImageList] = useState(imageLists[newPizza.category] || []);

  useEffect(() => {
    // –û–Ω–æ–≤–ª—é—î–º–æ currentImageList —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    setCurrentImageList(imageLists[newPizza.category] || []);
  }, [newPizza.category]);

  const handleImageDrop = (e: React.DragEvent<HTMLDivElement>, imageName: string) => {
    e.preventDefault();
    setNewPizza({
      ...newPizza,
      img: imageName, // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —ñ–º–µ–Ω—ñ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    });
    setSelectedOption(imageName); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ—ó –æ–ø—Ü—ñ—ó
  };

  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const { name, value } = e.target;

    setNewPizza({
      ...newPizza,
      [name]: value,
    });
  };

  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    console.log('–í–∏–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è:', newPizza.category);
    console.log('–í–∏–±—Ä–∞–Ω–∞ –Ω–∞–∑–≤–∞ –ø—Ä–æ–¥—É–∫—Ç—É:', newPizza.title);
    console.log('–í–∏–±—Ä–∞–Ω–µ —Ñ–æ—Ç–æ:', selectedOption);
    console.log('–¶—ñ–Ω–∞:', newPizza.price);

    if (newPizza.title && newPizza.price && selectedOption && newPizza.category) {
      addPizza({
        title: newPizza.title,
        img: selectedOption,
        price: Number(newPizza.price),
        category: newPizza.category, // –î–æ–¥–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–æ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä—É
        id: Math.floor(Math.random() * 9000),
      });
      setNewPizza(initState);
      setSelectedOption('');
    }
  };

  const [isFocused, setIsFocused] = useState(false);

  const handleFocus = () => {
    setIsFocused(true);
  };

  const handleBlur = () => {
    setIsFocused(false);
  };

  return (
    <Box bg="blackAlpha.600" borderRadius="lg" w="600px" p={4} color="white" border="1px solid orange.300">
      <FormControl>
        <Stack marginBottom={5} spacing={3}>
          <div>
            <FormLabel color="rgb(255, 180, 41)">–ö–∞—Ç–µ–≥–æ—Ä—ñ—è</FormLabel>
            <Select
              className="select-style select-style--category"
              bg="gray.900"
              borderColor="orange.300"
              variant="outline"
              name="category"
              placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é"
              value={newPizza.category}
              onChange={handleChange}>
              <option value="option2">üèÜ X—ñ—Ç –ø—Ä–æ–¥–∞–∂—ñ–≤</option>
              <option value="option3">üçï –ù–æ–≤–∏–Ω–∫–∏</option>
              <option value="option4">üçü –û—Å–Ω–æ–≤–Ω—ñ —Å—Ç—Ä–∞–≤–∏</option>
              <option value="option5">ü•ó –°–∞–ª–∞—Ç–∏</option>
            </Select>
          </div>
          <div>
            <FormLabel color="rgb(255, 180, 41">–ü—Ä–æ–¥—É–∫—Ç</FormLabel>
            <Select
              className="select-style"
              bg="gray.900"
              borderColor="orange.300"
              variant="outline"
              placeholder="–í–∏–±–µ—Ä—ñ—Ç—å –Ω–∞–∑–≤—É"
              name="title"
              value={newPizza.title}
              onChange={handleChange}>
              <option value="european">–ü—ñ—Ü–∞ –Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∞</option>
              <option value="meat">–ü—ñ—Ü–∞ –∑ –ú—è—Å–∞</option>
              <option value="hawaiian">–ü—ñ—Ü–∞ –ì–∞–≤–∞–π—Å—å–∫–∞</option>
              <option value="fourCheese">–ü—ñ—Ü–∞ 4 –°–∏—Ä–∏</option>
              <option value="caesar">–ü—ñ—Ü–∞ –¶–µ–∑–∞—Ä</option>
              <option value="pepperoni">–ü—ñ—Ü–∞ –ü–∞–ø–µ—Ä–æ–Ω—ñ</option>
              <option value="diablo">–ü—ñ—Ü–∞ –î—ñ–∞–±–ª–æ</option>
            </Select>
          </div>
          <div>
            <FormLabel color="rgb(255, 180, 41">–¶—ñ–Ω–∞</FormLabel>
            <Input
              required
              type="number"
              bg="gray.900"
              borderColor="orange.300"
              _placeholder={{
                color: '#fff',
              }}
              name="price"
              value={newPizza.price}
              onChange={handleChange}
              onFocus={handleFocus}
              onBlur={handleBlur}
              placeholder={isFocused ? ' ‚Ç¥' : '–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —Ü—ñ–Ω—É'}
            />
          </div>
          <div>
            <FormLabel color="rgb(255, 180, 41">–§–æ—Ç–æ</FormLabel>
            <div className="image-list">
              {currentImageList.map((image, index) => (
                <div
                  key={index}
                  draggable
                  onDragStart={(e) => e.dataTransfer.setData('image', image)}
                  className="image-item"
                  onClick={() => handleImageDrop(e, image)}>
                  <img
                    className="img-listCategory"
                    width={'100px'}
                    height={'100px'}
                    src={image}
                    alt={`–§–æ—Ç–æ ${index}`}
                  />
                </div>
              ))}
            </div>
            <div
              onDrop={(e) => {
                e.preventDefault();
                const image = e.dataTransfer.getData('image');
                setNewPizza({
                  ...newPizza,
                  img: image,
                });
                setSelectedOption(image); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ—ó –æ–ø—Ü—ñ—ó
              }}
              onDragOver={(e) => e.preventDefault()}
              style={{
                width: '120px',
                height: '80px',
                border: '2px dashed #ddd',
                display: 'flex',
                // alignItems: 'center',
                // justifyContent: 'center',
                fontSize: '16px',
              }}>
              {newPizza.img ? (
                <img src={newPizza.img} alt="–í–∏–±—Ä–∞–Ω–µ —Ñ–æ—Ç–æ" />
              ) : (
                '–ü–µ—Ä–µ—Ç—è–≥–Ω—ñ—Ç—å —Å—é–¥–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É'
              )}
            </div>
          </div>
        </Stack>
        <Center>
          <Button
            variant="outline"
            colorScheme="tomate"
            leftIcon={<AddIcon />}
            onClick={handleSubmit}>
            –î–û–î–ê–¢–ò –í –ú–ï–ù–Æ
          </Button>
        </Center>
      </FormControl>
    </Box>
  );
};
